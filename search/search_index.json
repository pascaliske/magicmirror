{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>pascaliske/magicmirror</code>","text":"<p>Go + Angular based smart mirror platform - packaged as single docker image.</p> <p> </p>"},{"location":"#images","title":"Images","text":"Registry Image GitHub <code>ghcr.io/pascaliske/magicmirror</code> Docker Hub <code>pascaliske/magicmirror</code> <p>The following platforms are available for the images:</p> <pre><code>$ docker run --rm mplatform/mquery ghcr.io/pascaliske/magicmirror:latest\nImage: pascaliske/magicmirror:latest\n * Manifest List: Yes\n * Supported platforms:\n   - linux/amd64\n   - linux/arm/v7\n   - linux/arm64\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Visit the documentation for a complete setup guide.</p> <p>To run a quick demo, you can just pull the image from one of the registries:</p> <pre><code># github container registry\n$ docker pull ghcr.io/pascaliske/magicmirror\n\n# docker hub\n$ docker pull pascaliske/magicmirror\n</code></pre> <p>Now you can simply run the server component using the following command:</p> <pre><code>$ docker run \\\n--detach \\\n--name magicmirror \\\n--publish 9000:9000 \\\n--volume $(pwd)/config.yml:/etc/magicmirror/config.yml \\\nghcr.io/pascaliske/magicmirror\n</code></pre>"},{"location":"#configuration","title":"Configuration","text":"<p>The project is configurable using a YAML file. You can find all possible values on the configuration page.</p>"},{"location":"#license","title":"License","text":"<p>MIT \u2013 \u00a9 2023 Pascal Iske</p>"},{"location":"LICENSE/","title":"MIT License","text":"<p>Copyright 2022 Pascal Iske, https://pascaliske.dev</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#introduction","title":"Introduction","text":"<p>Both, the server and app components can be fully customized using a single YAML configuration file but none of the keys are actually required. The file can be placed in one of the following destinations inside the container where it will be automatically picked up:</p> <ul> <li><code>/etc/magicmirror/config.yml</code> (preferred)</li> <li><code>/config.yml</code></li> </ul> <p>Alternatively you could explicitly pass in the configuration file via flag:</p> <pre><code>$ /magicmirror --config /foo/bar/baz.yml\n</code></pre> Full example with all possible keys /etc/magicmirror/config.yml<pre><code># optional: http listener port for the server\nport: 9000\n# optional: configuration for logging, possible values: 'debug', 'info', 'warn', 'error', 'fatal'\nlog:\nlevel: debug\n# optional: configuration for prometheus metrics endpoint\nmetrics:\nenabled: true\npath: /metrics\n# optional: geo location, only required for various cards and apis, e.g. weather card\nlocation:\nlatitude: 1.2345678\nlongitude: 1.234567\n# optional: rss feeds displayed inside news card\nfeeds:\n- https://my-news.org/rss/feed\n# optional: api keys for the respective data apis\napiKeys:\n# optional: open weather api key, required if weather card is used\nopenWeather: my-api-key-123\n</code></pre>"},{"location":"configuration/#check-only-mode","title":"Check-only mode","text":"<p>You can just validate the configuration file using the following sub command:</p> <pre><code># default config path\n$ /magicmirror config validate\n\n# custom config path\n$ /magicmirror config validate --config /foo/bar/baz.yml\n</code></pre>"},{"location":"configuration/#sections","title":"Sections","text":"<p>To keep things simple the configuration file is divided into multiple sections. Almost all of them can be omitted as they are optional.</p>"},{"location":"configuration/#basic","title":"Basic","text":"Key Type Mandatory Default Description <code>port</code> <code>int</code> no <code>9000</code> Port for the HTTP server to serve the web UI. Example <pre><code>port: 9000\n</code></pre>"},{"location":"configuration/#log","title":"Log","text":"Key Type Mandatory Default Description <code>level</code> <code>enum</code> (<code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>fatal</code>) no <code>info</code> Log level for the server component. Example <pre><code>log:\nlevel: debug\n</code></pre>"},{"location":"configuration/#metrics","title":"Metrics","text":"<p>The server is capable of exposing some basic metrics for Prometheus. To enable them the following configuration values can be used:</p> Key Type Mandatory Default Description <code>enabled</code> <code>bool</code> no <code>true</code> Enable/Disable Prometheus metrics endpoint. <code>path</code> <code>string</code> no <code>/metrics</code> Path of the metrics endpoint. The default value is ready for Prometheus to be consumed. Example <pre><code>metrics:\nenabled: true\npath: /metrics\n</code></pre>"},{"location":"configuration/#location","title":"Location","text":"<p>Customize your geo location. It is needed for various cards, such as the weather card.</p> <p>Note: If you skip this section those cards will be disabled automatically.</p> Key Type Mandatory Default Description <code>latitude</code> <code>float</code> no - Latitude as float for your geo location. <code>longitude</code> <code>float</code> no - Longitude as float for your geo location. Example <pre><code>location:\nlatitude: 1.2345678\nlongitude: 1.234567\n</code></pre>"},{"location":"configuration/#feeds","title":"Feeds","text":"<p>The news card requires RSS feeds to display them on the mirror. This section enables you to pass in one or more URLs inside a top-level list configuration item.</p> Example <pre><code>feeds:\n- https://my-news.org/rss/feed\n</code></pre>"},{"location":"configuration/#api-keys","title":"API Keys","text":"<p>Some cards (e.g. the weather card) need an API key to authenticate you against their data APIs.</p> <p>Note: If you skip this section those cards will be disabled automatically.</p> Key Type Mandatory Default Description <code>openWeather</code> <code>string</code> no - OpenWeather API key required for the weather card. Example <pre><code>apiKeys:\nopenWeather: my-api-key-123\n</code></pre>"}]}